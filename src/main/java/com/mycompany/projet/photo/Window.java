/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.projet.photo;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import javax.swing.Icon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author 33627
 */
public class Window extends javax.swing.JFrame {

    /**
     * Creates new form Window
     */
    
    private Collections c; 
    private File[] collectionsList; 
    private Photo[] currentPhotos; 
    
    public Window() {
        initComponents();
        generate(); 
    }
    
    private void generate(){
        this.c = new Collections(); 
        this.collectionsList = this.c.getCollections(); 
        collectionsCombo.removeAllItems();
        if ((this.collectionsList != null) && (this.collectionsList.length > 0)) {
            for(File collection : this.collectionsList){ 
                collectionsCombo.addItem(collection.getName());
            }    
        }  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        collectionsCombo = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        suivant = new javax.swing.JButton();
        addCollectionButton = new javax.swing.JButton();
        deleteCollectionButton = new javax.swing.JButton();
        addPhotoButton = new javax.swing.JButton();
        deletePhotoButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gestionnaire de Collections de Photos");

        collectionsCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                collectionsComboItemStateChanged(evt);
            }
        });

        suivant.setText("Photo suivante");
        suivant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suivantActionPerformed(evt);
            }
        });

        addCollectionButton.setText("Ajouter une Collection");
        addCollectionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCollectionButtonActionPerformed(evt);
            }
        });

        deleteCollectionButton.setText("Supprimer une Collection");
        deleteCollectionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCollectionButtonActionPerformed(evt);
            }
        });

        addPhotoButton.setText("DÃ©poser une Photo");
        addPhotoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPhotoButtonActionPerformed(evt);
            }
        });

        deletePhotoButton.setText("Retirer une Photo");
        deletePhotoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePhotoButtonActionPerformed(evt);
            }
        });

        closeButton.setText("QUITTER");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(collectionsCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addCollectionButton)
                        .addGap(18, 18, 18)
                        .addComponent(deleteCollectionButton)
                        .addGap(18, 18, 18)
                        .addComponent(addPhotoButton))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(deletePhotoButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(suivant, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(closeButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(collectionsCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addCollectionButton)
                    .addComponent(deleteCollectionButton)
                    .addComponent(addPhotoButton)
                    .addComponent(deletePhotoButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(suivant)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(closeButton)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void collectionsComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_collectionsComboItemStateChanged
        // TODO add your handling code here:
        String collectionName = collectionsCombo.getItemAt(collectionsCombo.getSelectedIndex());
        if ((this.collectionsList != null) && (this.collectionsList.length > 0)) {
           for(File collection : this.collectionsList){ 
               if(collection.getName().equals(collectionName)){
                   this.currentPhotos = this.c.getPhotos(collection); 
                   if ((this.currentPhotos != null) && (this.currentPhotos.length > 0)){
                        jLabel1.setIcon(this.currentPhotos[0].getImageResized());
                    }else{
                        jLabel1.setIcon(null);
                        jLabel1.setText("Empty collection!");
                    }
               }
           }    
        } else{
            jLabel1.setIcon(null);
            jLabel1.setText("No collection!");
        } 
        
    }//GEN-LAST:event_collectionsComboItemStateChanged

    private void suivantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suivantActionPerformed
        // TODO add your handling code here:
        if(this.currentPhotos != null){
            Icon currentImage = jLabel1.getIcon();
            int index = indexOf(this.currentPhotos, currentImage); 
            if(index == this.currentPhotos.length -1){ jLabel1.setIcon(this.currentPhotos[0].getImageResized()); }
            else{jLabel1.setIcon(this.currentPhotos[index+1].getImageResized());}
        }
        
    }//GEN-LAST:event_suivantActionPerformed

    private int indexOf(Photo [] photos, Icon imageResized) {
        if (photos == null) {
            return -1; 
        }
        int len = photos.length, i = 0; 
        
        while (i < len) {
            if (photos[i].getImageResized() == imageResized) {
                return i;
            }
            else {
                i += 1;
            }
        }
        return -1;
    }
    
    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
        System.exit(0);
    }//GEN-LAST:event_closeButtonActionPerformed

    private void deleteCollectionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCollectionButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        fc.setCurrentDirectory(new File(System.getProperty("user.dir"), "collections"));
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY); 
        fc.setApproveButtonText("Delete");
        int returnValue = fc.showOpenDialog(this);
        if (returnValue == JFileChooser.APPROVE_OPTION){
            File collection = fc.getSelectedFile();
            String[] imageFiles = collection.list(); 
            if(imageFiles != null){
                for(String image : imageFiles){
                    File imageFile = new File(collection.getPath(),image);
                    imageFile.delete();
                }
            }
            collection.delete(); 
            generate();
        }        
    }//GEN-LAST:event_deleteCollectionButtonActionPerformed

    private void deletePhotoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePhotoButtonActionPerformed
        // TODO add your handling code here:
        String collectionName = collectionsCombo.getItemAt(collectionsCombo.getSelectedIndex());
        JFileChooser fc = new JFileChooser();
        fc.setCurrentDirectory(new File("collections", collectionName));
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fc.setFileFilter(new FileNameExtensionFilter("Images *.jpg, *.png, *.gif, *.bmp", "jpg", "png", "gif", "bmp"));
        fc.setApproveButtonText("Delete");
        int returnValue = fc.showOpenDialog(this);
        if (returnValue == JFileChooser.APPROVE_OPTION){
            File collection = fc.getSelectedFile();
            collection.delete(); 
            generate();
        }        
    }//GEN-LAST:event_deletePhotoButtonActionPerformed

    private void addPhotoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPhotoButtonActionPerformed
        // TODO add your handling code here:
        String[] collectionNames = new String[this.collectionsList.length];
        for (int i = 0; i < this.collectionsList.length; i++) {
            collectionNames[i] = this.collectionsList[i].getName(); 
        }
        
        String choosenCollection = (String) JOptionPane.showInputDialog(this, "Choisir une collection",
            "Choix de la collection", JOptionPane.QUESTION_MESSAGE, null,
            collectionNames, collectionNames[0]);
        
        if(choosenCollection != null){
            JFileChooser fc = new JFileChooser();
            fc.setCurrentDirectory(new File (System.getProperty("user.home") + System.getProperty("file.separator") + "Downloads"));
            fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
            fc.setFileFilter(new FileNameExtensionFilter("Images *.jpg, *.png, *.gif, *.bmp", "jpg", "png", "gif", "bmp"));
            int returnValue = fc.showSaveDialog(this);
            if (returnValue == JFileChooser.APPROVE_OPTION){
                File image = fc.getSelectedFile();
                File collection = new File("collections", choosenCollection); 
                try {
                    Files.copy(image.toPath(),(new File(collection.getAbsolutePath() + System.getProperty("file.separator") + image.getName())).toPath(),StandardCopyOption.REPLACE_EXISTING);
                } catch (IOException e) {
                    System.out.println("Erreur copying image!");
                }

                generate();
            }    
        }
    }//GEN-LAST:event_addPhotoButtonActionPerformed

    private void addCollectionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCollectionButtonActionPerformed
        // TODO add your handling code here:
        //JOptionPane.showMessageDialog(null, "La collection existe dÃ©jÃ !", "Alert", JOptionPane.ERROR_MESSAGE);
        String newCollection = (String)JOptionPane.showInputDialog(this, "Taper le nom de la collection", "Ajouter une Collection", JOptionPane.PLAIN_MESSAGE); 
        if(newCollection != null){
            if ((this.collectionsList != null) && (this.collectionsList.length > 0)) {
                for(File collection : this.collectionsList){ 
                    if(collection.getName().equalsIgnoreCase(newCollection)){
                        JOptionPane.showMessageDialog(this, "Cette collection existe dÃ©jÃ !", "Alert", JOptionPane.ERROR_MESSAGE);
                    }
                }    
            }
            c.addCollection(newCollection);
            generate();
        }
    }//GEN-LAST:event_addCollectionButtonActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Window().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCollectionButton;
    private javax.swing.JButton addPhotoButton;
    private javax.swing.JButton closeButton;
    private javax.swing.JComboBox<String> collectionsCombo;
    private javax.swing.JButton deleteCollectionButton;
    private javax.swing.JButton deletePhotoButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton suivant;
    // End of variables declaration//GEN-END:variables
}
